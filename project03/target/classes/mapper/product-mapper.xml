<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="product"> <!-- member테이블에 있는 insert 실행해줘 -->

	<insert id="insert" parameterType="productVO"> <!-- 상품등록 -->
		insert into product values(#{product_id}, #{product_title}, #{product_content}, #{product_image}, #{product_price}, #{product_category}, #{product_adress}, now(), 0, 0, #{user_id})
	</insert>

	<delete id="delete" parameterType="productVO"> <!-- 상품삭제 -->
		delete from product where product_id = #{product_id}  
	</delete>
	
 	<update id="update" parameterType="productVO"> <!-- 상품 업데이트 -->
		update product set product_title = #{product_title}, product_content = #{product_content}, product_image = #{product_image}, product_category = #{product_category}, product_adress = #{product_adress} where product_id = #{product_id}
	</update>
	
	<update id="updatecount" parameterType="int">  <!-- 조회수 -->
		update product set product_count=product_count+1 where product_id = #{product_id} LIMIT 1
	</update>

	
	<select id="list" resultType="productVO"> <!-- 메인 상품 최신 등록순 -->
		select *from product ORDER BY product_id DESC
	</select>
	
<!-- 	<select id="list2" resultType="productVO"> 인기순
		select *from product ORDER BY product_count DESC 
	</select> -->

	<select id="join" resultType="productuserVO"><!-- user테이블에서 user_age가져오기 -->
		select u.user_age, p.* from user u, product p where u.user_id = p.user_id and u.user_age like CONCAT(#{user_age}, '%') ORDER BY product_count DESC 	
	</select>

	<select id="join1" resultType="productuserVO"><!-- 로그인 아이디로 나이가져오기 -->
		select user_age from user where user_id = #{user_id}
	</select>


<!-- 
	<select id="join2" resultType="productuserVO">2씹대
		select u.user_age, p.* from user u, product p where u.user_id = p.user_id and substring(u.user_age,1,1)=2;
	</select>

	<select id="join3" resultType="productuserVO">3씹대
		select u.user_age, p.* from user u, product p where u.user_id = p.user_id and substring(u.user_age,1,1)=3;
	</select>
	
	 -->
	
	
	
	
	
<!-- select zz.user_id, pr.product_id, pr.product_price, pr.product_title, pr.product_category 가져올것

		from product  pr  join zzim         zz     on      pr.product_id = zz.product_id where zz.user_id = #{user_id}
			받을테이블명 병명      가져올테이블    별명            별명.user_id = 가져올테이블user_id where pr.user_id = #{?} -->


	 <select id="view" parameterType="productVO" resultType="productVO"> <!-- 상세목록 가져와 최신순 정렬 -->
		select * from product where product_id = #{product_id} ORDER BY product_id DESC
	 </select> 

	<select id="search" parameterType="productVO" resultType="productVO"> <!-- 상품 검색후 최신순 으로 가져오기 -->
		select *from product where product_title like CONCAT('%', #{product_title} , '%') OR product_category like CONCAT('%', #{product_category} , '%') OR product_adress like CONCAT('%', #{product_adress} , '%') ORDER BY product_id DESC <!-- OR product_id like CONCAT('%', #{product_id} , '%') OR product_content like CONCAT('%', #{product_content} , '%')   -->
	</select>
	
	<insert id="insert1" parameterType="paymentVO"> <!-- 결제정보 입력 -->
		insert into payment values(null, #{user_id}, #{product_id}, #{product_price}, now(), 0)
	</insert>
	
	<update id="payupdate" parameterType="int">  <!-- 조회수 -->
		update product set product_status=product_status+1 where product_id = #{product_id}
	</update>
	
	
</mapper>